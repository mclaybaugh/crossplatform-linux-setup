#!/bin/sh
# Author: Michael Claybaugh
# Description: Shell script for automating the setup of my prefered linux
#              programs and settings

# To connect to SQL Server
#sudo apt install freetds unixodbc unixodbc-dev

T="SETUP:"

installUbuntuNorms() {
    # Things omitted to be installed in other ways:
    # 1. Neovim (from source)
    # 2. Ripgrep (from github deb)
    # 3. Discord (snap or deb)
    sudo apt install build-essential curl git npm nodejs ranger docker \
        docker-compose php cifs-utils xclip shellcheck universal-ctags
}

installDiscord() {
    echo "$T Downloading release from discord..."
    curl -Lo discord.deb https://discordapp.com/api/download?platform=linux&format=deb
    echo "$T Installing"
    sudo dpkg -i discord.deb
    echo "$T Removing installation file"
    rm -v discord.deb
}

installVscodium() {
    echo "$T Downloading release from Github..."
    curl -Lo vscodium.deb https://github.com/VSCodium/vscodium/releases/download/1.35.1/codium_1.35.1-1560422401_amd64.deb
    echo "$T Installing"
    sudo dpkg -i vscodium.deb
    echo "$T Removing installation file"
    rm -v vscodium.deb
}

installRipgrep() {
    echo "$T Downloading release from Github..."
    curl -LO https://github.com/BurntSushi/ripgrep/releases/download/11.0.1/ripgrep_11.0.1_amd64.deb
    echo "$T Installing"
    sudo dpkg -i ripgrep_11.0.1_amd64.deb
    echo "$T Removing installation file"
    rm -v ripgrep_11.0.1_amd64.deb
}

cloneBuildNeovim() {
    echo "$T Install prerequisites..."
    sudo apt install ninja-build gettext libtool libtool-bin autoconf automake cmake g++ pkg-config unzip
    echo "$T Clone repository..."
    git clone https://github.com/neovim/neovim ../neovim
    echo "$T Build and install..."
    cd ../neovim || exit
    make CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX=$HOME/neovim" CMAKE_BUILD_TYPE=Release
    make install
    cd ../linux-setup || exit
}

cloneBashGitPrompt() {
    git clone https://github.com/magicmonty/bash-git-prompt ../bash-git-prompt
}

installVimPlug() {
    curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    echo "After this setup, open Vim and type :PlugInstall"
}

installEslint() {
    sudo npm install --global eslint
}

copyConfigs() {
    VIM_CONFIG_DIR=~/.config/nvim
    cp -v config/bashrc "$HOME/.bashrc"
    cp -v config/git-prompt-colors.sh "$HOME/.git-prompt-colors.sh"
    cp -v config/eslintrc.json "$HOME/.eslintrc.json"
    if [ ! -d "$VIM_CONFIG_DIR" ]; then
        mkdir $VIM_CONFIG_DIR
    fi
    cp -v config/vimrc "$VIM_CONFIG_DIR/init.vim"
}

gitNameEmail() {
    git config --global user.name "Michael Claybaugh"
    git config --global user.email "mclaybaugh2@liberty.edu"
}

sshFolderPerms() {
    sudo chmod -v 700 ~/.ssh
    sudo chmod -v 644 ~/.ssh/id_rsa.pub
    sudo chmod -v 600 ~/.ssh/id_rsa
    sudo chmod -v 600 ~/.ssh/config
}

TASK=start

while [ "$TASK" != "exit" ]
do
    echo ""
    echo "Enter number to run command, or type 'exit'"
    echo ""
    echo "    1: Apt install norms for Ubuntu"
    echo "    2: Install latest discord deb from discordapp.com"
    echo "    3: Install vscodium 1.35.1 from github"
    echo "    4: Install ripgrep 11.0.1 from github"
    echo "    5: Clone and build neovim"
    echo "    6: Clone bash-git-prompt"
    echo "    7: Install Vim-Plug"
    echo "    8: Install eslint from npm"
    echo "    9: Update configs for bash, eslint, and nvim"
    echo "    10: Setup git config name and email"
    echo "    11: Set permissions of ssh folder"
    echo ""
    printf "SETUP> "
    read -r TASK

    # do task in case
    case $TASK in
        "exit")
            echo "Peace out";;
        "1")
            installUbuntuNorms;;
        "2")
            installDiscord;;
        "3")
            installVscodium;;
        "4")
            installRipgrep;;
        "5")
            cloneBuildNeovim;;
        "6")
            cloneBashGitPrompt;;
        "7")
            installVimPlug;;
        "8")
            installEslint;;
        "9")
            copyConfigs;;
        "10")
            gitNameEmail;;
        "11")
            sshFolderPerms;;
        *)
            echo "Invalid option"
    esac
done
